###########################################################
#########	Create new VPC in 2 regions         #######
###########################################################

vagrant tfm-workspace (dev) $ terraform apply

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.network.aws_vpc.vpc_ldn0001 will be created
  + resource "aws_vpc" "vpc_ldn0001" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "vpc_ldn0001"
        }
      + tags_all                             = {
          + "Name" = "vpc_ldn0001"
        }
    }

  # module.network.aws_vpc.vpc_syd0001 will be created
  + resource "aws_vpc" "vpc_syd0001" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "vpc_syd0001"
        }
      + tags_all                             = {
          + "Name" = "vpc_syd0001"
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

module.network.aws_vpc.vpc_syd0001: Creating...
module.network.aws_vpc.vpc_ldn0001: Creating...
module.network.aws_vpc.vpc_syd0001: Still creating... [10s elapsed]
module.network.aws_vpc.vpc_syd0001: Creation complete after 11s [id=vpc-0636a0f563b3515b3]
module.network.aws_vpc.vpc_ldn0001: Still creating... [10s elapsed]
module.network.aws_vpc.vpc_ldn0001: Creation complete after 17s [id=vpc-0c59ce554a414b997]

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.



######## OUTPUT ############

vagrant tfm-workspace (dev) $ aws_vpc
[
    {
        "id": "vpc-08e83369b097b85f2",
        "cidr": "172.31.0.0/16",
        "name": null
    },
    {
        "id": "vpc-0636a0f563b3515b3",
        "cidr": "10.0.0.0/16",
        "name": "vpc_syd0001"
    }
]
vagrant tfm-workspace (dev) $ aws_vpc --region eu-west-2
[
    {
        "id": "vpc-03143662b677b4758",
        "cidr": "172.31.0.0/16",
        "name": null
    },
    {
        "id": "vpc-0c59ce554a414b997",
        "cidr": "10.0.0.0/16",
        "name": "vpc_ldn0001"
    }
]

###########################################################
#######     Change prefix for existing VPC  	  #########
###########################################################

vim modules/network/variables.tf
# variables.tf for network.tf module


variable "VPC_cidrblock" {
  default = "10.111.0.0/16"
}

variable "enable_dns_support" {
  type    = bool
  default = true
}

variable "enable_dns_hostnames" {
  type    = bool
  default = true
}

# end of variables



vagrant tfm-workspace (dev) $ terraform apply
module.network.aws_vpc.vpc_syd0001: Refreshing state... [id=vpc-0636a0f563b3515b3]
module.network.aws_vpc.vpc_ldn0001: Refreshing state... [id=vpc-0c59ce554a414b997]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
-/+ destroy and then create replacement

Terraform will perform the following actions:

  # module.network.aws_vpc.vpc_ldn0001 must be replaced
-/+ resource "aws_vpc" "vpc_ldn0001" {
      ~ arn                                  = "arn:aws:ec2:eu-west-2:048336976279:vpc/vpc-0c59ce554a414b997" -> (known after apply)
      - assign_generated_ipv6_cidr_block     = false -> null
      ~ cidr_block                           = "10.0.0.0/16" -> "10.111.0.0/16" # forces replacement
      ~ default_network_acl_id               = "acl-0c58fd8208654b1bd" -> (known after apply)
      ~ default_route_table_id               = "rtb-082ce93c5b08ae53b" -> (known after apply)
      ~ default_security_group_id            = "sg-073285626fdc73a54" -> (known after apply)
      ~ dhcp_options_id                      = "dopt-0ae772ada40e57940" -> (known after apply)
      ~ enable_classiclink                   = false -> (known after apply)
      ~ enable_classiclink_dns_support       = false -> (known after apply)
      ~ id                                   = "vpc-0c59ce554a414b997" -> (known after apply)
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      - ipv6_netmask_length                  = 0 -> null
      ~ main_route_table_id                  = "rtb-082ce93c5b08ae53b" -> (known after apply)
      ~ owner_id                             = "048336976279" -> (known after apply)
        tags                                 = {
            "Name" = "vpc_ldn0001"
        }
        # (4 unchanged attributes hidden)
    }

  # module.network.aws_vpc.vpc_syd0001 must be replaced
-/+ resource "aws_vpc" "vpc_syd0001" {
      ~ arn                                  = "arn:aws:ec2:ap-southeast-2:048336976279:vpc/vpc-0636a0f563b3515b3" -> (known after apply)
      - assign_generated_ipv6_cidr_block     = false -> null
      ~ cidr_block                           = "10.0.0.0/16" -> "10.111.0.0/16" # forces replacement
      ~ default_network_acl_id               = "acl-0d2d9f025c32b2593" -> (known after apply)
      ~ default_route_table_id               = "rtb-07ff2a3203121b0c8" -> (known after apply)
      ~ default_security_group_id            = "sg-01c28828d3d696757" -> (known after apply)
      ~ dhcp_options_id                      = "dopt-0f89849eddd5cdc17" -> (known after apply)
      ~ enable_classiclink                   = false -> (known after apply)
      ~ enable_classiclink_dns_support       = false -> (known after apply)
      ~ id                                   = "vpc-0636a0f563b3515b3" -> (known after apply)
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      - ipv6_netmask_length                  = 0 -> null
      ~ main_route_table_id                  = "rtb-07ff2a3203121b0c8" -> (known after apply)
      ~ owner_id                             = "048336976279" -> (known after apply)
        tags                                 = {
            "Name" = "vpc_syd0001"
        }
        # (4 unchanged attributes hidden)
    }

Plan: 2 to add, 0 to change, 2 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

module.network.aws_vpc.vpc_syd0001: Destroying... [id=vpc-0636a0f563b3515b3]
module.network.aws_vpc.vpc_syd0001: Destruction complete after 0s
module.network.aws_vpc.vpc_syd0001: Creating...
module.network.aws_vpc.vpc_ldn0001: Destroying... [id=vpc-0c59ce554a414b997]
module.network.aws_vpc.vpc_ldn0001: Destruction complete after 0s
module.network.aws_vpc.vpc_ldn0001: Creating...
module.network.aws_vpc.vpc_syd0001: Still creating... [10s elapsed]
module.network.aws_vpc.vpc_syd0001: Creation complete after 12s [id=vpc-0efc6f3c90e42fe64]
module.network.aws_vpc.vpc_ldn0001: Still creating... [10s elapsed]
module.network.aws_vpc.vpc_ldn0001: Creation complete after 17s [id=vpc-0f2808d6ae94ae2cd]

Apply complete! Resources: 2 added, 0 changed, 2 destroyed.


######## OUTPUT ############

vagrant tfm-workspace (dev) $ aws_vpc
[
    {
        "id": "vpc-08e83369b097b85f2",
        "cidr": "172.31.0.0/16",
        "name": null
    },
    {
        "id": "vpc-0efc6f3c90e42fe64",
        "cidr": "10.111.0.0/16",
        "name": "vpc_syd0001"
    }
]
vagrant tfm-workspace (dev) $ aws_vpc --region eu-west-2
[
    {
        "id": "vpc-03143662b677b4758",
        "cidr": "172.31.0.0/16",
        "name": null
    },
    {
        "id": "vpc-0f2808d6ae94ae2cd",
        "cidr": "10.111.0.0/16",
        "name": "vpc_ldn0001"
    }
]


#################################################
#######		Destroy VPC		#########
#################################################

vagrant tfm-workspace (dev) $ terraform destroy
module.network.aws_vpc.vpc_syd0001: Refreshing state... [id=vpc-0efc6f3c90e42fe64]
module.network.aws_vpc.vpc_ldn0001: Refreshing state... [id=vpc-0f2808d6ae94ae2cd]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # module.network.aws_vpc.vpc_ldn0001 will be destroyed
  - resource "aws_vpc" "vpc_ldn0001" {
      - arn                              = "arn:aws:ec2:eu-west-2:048336976279:vpc/vpc-0f2808d6ae94ae2cd" -> null
      - assign_generated_ipv6_cidr_block = false -> null
      - cidr_block                       = "10.111.0.0/16" -> null
      - default_network_acl_id           = "acl-0391dd97a9de8c9ba" -> null
      - default_route_table_id           = "rtb-05dd2840e1d301ea2" -> null
      - default_security_group_id        = "sg-04a9c2bd4a44f636b" -> null
      - dhcp_options_id                  = "dopt-0ae772ada40e57940" -> null
      - enable_classiclink               = false -> null
      - enable_classiclink_dns_support   = false -> null
      - enable_dns_hostnames             = true -> null
      - enable_dns_support               = true -> null
      - id                               = "vpc-0f2808d6ae94ae2cd" -> null
      - instance_tenancy                 = "default" -> null
      - ipv6_netmask_length              = 0 -> null
      - main_route_table_id              = "rtb-05dd2840e1d301ea2" -> null
      - owner_id                         = "048336976279" -> null
      - tags                             = {
          - "Name" = "vpc_ldn0001"
        } -> null
      - tags_all                         = {
          - "Name" = "vpc_ldn0001"
        } -> null
    }

  # module.network.aws_vpc.vpc_syd0001 will be destroyed
  - resource "aws_vpc" "vpc_syd0001" {
      - arn                              = "arn:aws:ec2:ap-southeast-2:048336976279:vpc/vpc-0efc6f3c90e42fe64" -> null
      - assign_generated_ipv6_cidr_block = false -> null
      - cidr_block                       = "10.111.0.0/16" -> null
      - default_network_acl_id           = "acl-0ca560f0f40f717a5" -> null
      - default_route_table_id           = "rtb-0f3f5f4d10de28a2e" -> null
      - default_security_group_id        = "sg-0698fe095fa96f3eb" -> null
      - dhcp_options_id                  = "dopt-0f89849eddd5cdc17" -> null
      - enable_classiclink               = false -> null
      - enable_classiclink_dns_support   = false -> null
      - enable_dns_hostnames             = true -> null
      - enable_dns_support               = true -> null
      - id                               = "vpc-0efc6f3c90e42fe64" -> null
      - instance_tenancy                 = "default" -> null
      - ipv6_netmask_length              = 0 -> null
      - main_route_table_id              = "rtb-0f3f5f4d10de28a2e" -> null
      - owner_id                         = "048336976279" -> null
      - tags                             = {
          - "Name" = "vpc_syd0001"
        } -> null
      - tags_all                         = {
          - "Name" = "vpc_syd0001"
        } -> null
    }

Plan: 0 to add, 0 to change, 2 to destroy.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

module.network.aws_vpc.vpc_syd0001: Destroying... [id=vpc-0efc6f3c90e42fe64]
module.network.aws_vpc.vpc_syd0001: Destruction complete after 0s
module.network.aws_vpc.vpc_ldn0001: Destroying... [id=vpc-0f2808d6ae94ae2cd]
module.network.aws_vpc.vpc_ldn0001: Destruction complete after 1s

Destroy complete! Resources: 2 destroyed.


######## OUTPUT ############

vagrant tfm-workspace (dev) $ aws_vpc
[
    {
        "id": "vpc-08e83369b097b85f2",
        "cidr": "172.31.0.0/16",
        "name": null
    }
]
vagrant tfm-workspace (dev) $ aws_vpc --region eu-west-2
[
    {
        "id": "vpc-03143662b677b4758",
        "cidr": "172.31.0.0/16",
        "name": null
    }
]
vagrant tfm-workspace (dev) $
